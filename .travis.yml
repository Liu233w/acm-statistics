notifications:
  email:
    on_success: never
    on_failure: always

language: node_js
node_js:
  - 8

stages:
  - name: test
  - name: deploy
    if: tag =~ ^v

services:
  - docker

cache:
  directories:
    - $HOME/.sonar/cache
    - $HOME/.m2

install:
  - npm install -g codecov

matrix:
  include:
    - env: NAME=Frontend
      stage: test
      script:
        - make -- run-frontend npm run lint
        - docker run -v "$(pwd)/frontend/coverage:/var/project/coverage" acm-statistics-frontend-base npm test -- --ci && cd frontend && codecov

    - env: NAME=Crawler
      stage: test
      script:
        - make -- run-crawler npm run lint
        - docker run -v "$(pwd)/crawler/coverage:/var/project/coverage" acm-statistics-crawler npm test -- '--testPathPattern=__test__/(?!crawlers\.test).*\.js' && cd crawler && codecov

    - env: NAME=Crawler-api-backend
      stage: test
      script:
        - make -- run-crawler-api-backend npm run lint
        - docker run -v "$(pwd)/frontend/coverage:/var/project/coverage" acm-statistics-crawler-api-backend npm test && cd crawler-api-backend && codecov

    - env: NAME=Root
      stage: test
      addons:
        sonarcloud:
          organization: "liu233w-github"
          token: $SONAR_TOKEN
      script:
        - npm install
        - npm run commitlint-travis
      after_script:
        - sonar-scanner -Dsonar.projectKey=acm-statistics -Dsonar.organization=liu233w-github -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.exclusions=**/node_modules/**/*,backend
