version: '3.4'

services:

  reverse-proxy:
    image: traefik:v2.8.8
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--accesslog=true"
      # An outside reverse proxy is used, so we can just trust all forward headers
      - "--entryPoints.web.forwardedHeaders.insecure"
    ports:
      - "${EXPOSE_PORT}:80"
      - "${TRAEFIK_PORT}:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - frontend
      - backend
      - captcha-service
      - crawler-api-backend

  frontend:
    image: ${DOCKER_REPO}acm-statistics-frontend${DOCKER_TAG}
    environment:
      - HOST=0.0.0.0
    labels:
      - traefik.http.routers.frontend.rule=PathPrefix(`/`)
      - traefik.http.services.frontend.loadbalancer.server.port=3000

  crawler-api-backend:
    image: ${DOCKER_REPO}acm-statistics-crawler-api-backend${DOCKER_TAG}
    environment:
      - ACM_STATISTICS_CRAWLER_ENV:crawlers:vjudge:crawler_login_user="${VJUDGE_USERNAME}"
      - ACM_STATISTICS_CRAWLER_ENV:crawlers:vjudge:crawler_login_password="${VJUDGE_PASSWORD}"
    labels:
      - traefik.http.routers.crawler-api-backend.rule=PathPrefix(`/api/crawlers`)
      - traefik.http.services.crawler-api-backend.loadbalancer.server.port=80

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: -s "0 */30 * * * *" --cleanup

  backend:
    image: ${DOCKER_REPO}acm-statistics-backend${DOCKER_TAG}
    environment:
      ConnectionStrings__Default: Server=db; port=3306; Database=acm_statistics; uid=root; pwd=${MYSQL_ROOT_PASSWORD}; Convert Zero Datetime=True
      BACKEND_ADMIN_DEFAULT_PASSWORD: ${BACKEND_ADMIN_DEFAULT_PASSWORD}
      Authentication__JwtBearer__SecurityKey: ${BACKEND_JWT_PRIVATE_KEY}
      WAIT_COMMAND: wait-for-it db:3306 -t 0
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: 'true'
    labels:
      - traefik.http.routers.backend.rule=PathPrefix(`/api`)||PathPrefix(`/AntiForgery`)
      - traefik.http.routers.backend.priority=18
      - traefik.http.services.backend.loadbalancer.server.port=80
    volumes:
      - ./App_Data:/app/App_Data
    depends_on:
      - db
      - captcha-service

  db:
    image: mysql:8-oracle
    restart: always
    environment:
      MYSQL_DATABASE: acm_statistics
      # Password for root access
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    # Where our data will be persisted
    volumes:
      - ./backend-db:/var/lib/mysql
    # fix `mbind: Operation not permitted`, see https://stackoverflow.com/a/55706057
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    ports:
      - "3306:3306"

  captcha-service:
    image: ${DOCKER_REPO}acm-statistics-captcha-service${DOCKER_TAG}
    labels:
      # Only getting captcha part needs public access.
      - traefik.http.routers.captcha-service.rule=Path(`/api/captcha-service/generate`)
      - traefik.http.services.captcha-service.loadbalancer.server.port=80

  db-backup:
    image: databack/mysql-backup
    restart: always
    user: "${DB_BACKUP_UID}"
    volumes:
      - ./db-backup:/db
    environment:
      DB_NAMES: acm_statistics
      DB_DUMP_TARGET: /db
      DB_USER: root
      DB_PASS: ${MYSQL_ROOT_PASSWORD}
      # DB_DUMP_BEGIN: +2
      # backup at 3:00 am
      DB_DUMP_BEGIN: " 0300"
      DB_SERVER: db
      # Do not backup Logs table
      MYSQLDUMP_OPTS: --ignore-table=acm_statistics.AbpAuditLogs --ignore-table=acm_statistics.AbpUserLoginAttempts
    depends_on:
      - db

  ohunt:
    image: ${DOCKER_REPO}acm-statistics-ohunt${DOCKER_TAG}
    environment:
      ConnectionStrings__Default: Server=db; port=3306; Database=ohunt; uid=root; pwd=${MYSQL_ROOT_PASSWORD}; Convert Zero Datetime=True
      WAIT_COMMAND: wait-for-it db:3306 -t 0
    restart: always
    labels:
      - traefik.http.routers.ohunt.rule=PathPrefix(`/api/ohunt`)||PathPrefix(`/ohunt`)
      - traefik.http.services.ohunt.loadbalancer.server.port=80
    depends_on:
      - db
